# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Resticprofile < Formula
  desc "Configuration profiles for restic backup"
  homepage "https://github.com/creativeprojects/resticprofile"
  version "0.15.0"
  license "GPL-3.0-only"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/creativeprojects/resticprofile/releases/download/v0.15.0/resticprofile_0.15.0_darwin_amd64.tar.gz"
      sha256 "c203fc80725607851c21c0a20f8813ab86afa74460c585af3d6a44f2fc24f326"
    end
    if Hardware::CPU.arm?
      url "https://github.com/creativeprojects/resticprofile/releases/download/v0.15.0/resticprofile_0.15.0_darwin_arm64.tar.gz"
      sha256 "fa89e1c4e0cef8cc43b8475f3fa491e1b7b3bbdc423979e60050d2c8631995c6"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/creativeprojects/resticprofile/releases/download/v0.15.0/resticprofile_0.15.0_linux_amd64.tar.gz"
      sha256 "2516d73311799acfd88128b18e769f6e8f24f60f8628b384201bc933aa4e680f"
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/creativeprojects/resticprofile/releases/download/v0.15.0/resticprofile_0.15.0_linux_armv6.tar.gz"
      sha256 "60f85a4241b854f8b10ce39e3389912488086db53f9be2868a8709198821243d"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/creativeprojects/resticprofile/releases/download/v0.15.0/resticprofile_0.15.0_linux_arm64.tar.gz"
      sha256 "7884031597c479452f7d0c84413b8d3a5cd8b1d664d42df3819c89112b6a235f"
    end
  end

  head "https://github.com/creativeprojects/resticprofile.git"

  depends_on "restic" => :optional

  def install
    bin.install "resticprofile"
  end

  test do
    (testpath/"restic_repo").mkdir
    (testpath/"password.txt").write("key")
    (testpath/"profiles.yaml").write <<~EOS
      default:
        repository: "local:#{testpath}/restic_repo"
        password-file: "password.txt"
        initialize: true
    EOS

    (testpath/"testfile").write("This is a testfile")

    system "#{bin}/resticprofile", "backup", "testfile"
    system "#{bin}/resticprofile", "restore", "latest", "-t", "#{testpath}/restore"
    assert compare_file "testfile", "#{testpath}/restore/testfile"
  end
end
